{"version":3,"file":"static/js/310.b9f1cd3e.chunk.js","mappings":"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","sources":["API/getMovies.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '77e7936073a1f82fbc0d3a17a985fb5b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMovies = async (pathName, options) => {\n  const response = await axios.get(`${pathName}?api_key=${KEY}&${options}`);\n\n  return response;\n};\n","import { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n`;\nexport const Image = styled.img`\n  display: block;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 5px;\n`;\nexport const Title = styled.h2`\n  display: flex;\n  list-style: none;\n  align-items: center;\n  width: 200px;\n\n  font-weight: 600;\n\n  :hover {\n    scale: 1.05;\n  }\n`;\nexport const StyledLink = styled(NavLink)``;\n","import { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Image, StyledLink, Title } from './MovieList.styled';\n\nexport const MovieList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(({ title, name, id, poster_path }) => {\n        return (\n          <li key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                alt={title || name}\n              />\n              <Title>{title || name}</Title>\n            </StyledLink>\n          </li>\n        );\n      })}\n      <Outlet />\n    </List>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  max-width: 600px;\n  background-color: #000;\n  border-radius: 3px;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-size: 20px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font-size: 18px;\n  }\n`;\n\nexport const Submit = styled.button`\n  width: 20%;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovies } from 'API/getMovies';\n\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Form, Input, Submit } from './Movies.styled';\n\nconst Movies = () => {\n  const [movieData, setMovieData] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieSearch = searchParams.get('movieSearch') ?? '';\n\n  const options = `query=${movieSearch}&language=en-US&include_adult=false`;\n\n  useEffect(() => {\n    if (movieSearch === '') {\n      return;\n    }\n\n    const fetchMovie = async () => {\n      try {\n        const r = await getMovies('search/movie', options);\n        if (r.data.results.length === 0) {\n          return alert(\n            `Sorry, no movies were found with the name ${movieSearch}`\n          );\n        }\n        setMovieData(r.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovie();\n  }, [movieSearch, options]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    setSearchParams({\n      movieSearch: form.elements.filmSearch.value.toLowerCase(),\n    });\n    if (form.elements.filmSearch.value.trim() === '') {\n      return alert('Please enter a value');\n    }\n    form.reset();\n  };\n\n  return (\n    <main>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"filmSearch\" placeholder=\"Search movies\" />\n        <Submit type=\"submit\">Submit</Submit>\n      </Form>\n\n      {movieData.length !== 0 && (\n        <MovieList movies={movieData} location={location} />\n      )}\n    </main>\n  );\n};\nexport default Movies;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["axios","getMovies","pathName","options","response","List","styled","Image","Title","StyledLink","NavLink","MovieList","movies","location","map","title","name","id","poster_path","to","state","from","src","alt","Form","Input","Submit","useState","movieData","setMovieData","useLocation","useSearchParams","searchParams","setSearchParams","movieSearch","get","useEffect","fetchMovie","r","data","results","length","alert","console","log","onSubmit","e","preventDefault","form","currentTarget","elements","filmSearch","value","toLowerCase","trim","reset","type","placeholder","propTypes","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}