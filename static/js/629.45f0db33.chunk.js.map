{"version":3,"file":"static/js/629.45f0db33.chunk.js","mappings":"6MAIAA,EAAAA,GAAAA,SAAAA,QAAyB,gCAIlB,IAAMC,EAAS,mCAAG,WAAOC,EAAUC,GAAjB,uFACAH,EAAAA,GAAAA,IAAA,UAAaE,EAAb,oBAPb,mCAOa,YAAwCC,IADxC,cACjBC,EADiB,yBAGhBA,GAHgB,2CAAH,uD,yLCJhBC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECxBYE,EAAYN,EAAAA,GAAAA,IAAH,0CAGTO,EAAOP,EAAAA,GAAAA,IAAH,+DCFJQ,EAAY,SAAC,GASnB,IAAD,IARJC,aACEC,EAOE,EAPFA,aACAC,EAME,EANFA,YACAC,EAKE,EALFA,eACAC,EAIE,EAJFA,WACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,OAGIC,EAAO,IAAIC,KAAKP,GAAcQ,cACpC,OACE,UAACZ,EAAD,YACE,gBACEa,IAAG,yCAAoCR,GACvCS,IAAKR,KAGP,4BACE,kCAAQA,EAAR,aAA2BI,EAA3B,OACCH,IAAc,iCAAOA,EAAP,QACf,sCACA,uBAAIC,KACJ,oCAEA,SAACP,EAAD,UACGQ,EACGA,EAAOM,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAChB,OAAO,wBAAcA,GAALD,EACjB,IACD,gBAKb,ECaD,EA7CqB,WAAO,IAAD,YACzB,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOf,EAAP,KAAqBgB,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAgB7C,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAECvC,EAAAA,EAAAA,GAAU,SAAD,OAAU+B,GALzB,kBAGK,OAETS,EAFS,OAIfV,EAAgBU,EAAEC,MAJH,gDAMfC,QAAQC,IAAR,MANe,yDAAH,qDAShBJ,GACD,GAAE,CAACR,KAGF,4BACE,SAACxB,EAAD,CAAUC,GAAI2B,EAAd,0BACA,SAACtB,EAAD,CAAWC,aAAcA,KAEzB,2BACE,yBACE,SAAC,KAAD,CAAMN,GAAG,OAAO4B,MAAO,CAAEC,KAAI,oBAAEJ,EAASG,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,YAAvD,qBAIF,yBACE,SAAC,KAAD,CACE7B,GAAG,UACH4B,MAAO,CAAEC,KAAI,oBAAEJ,EAASG,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,YAFzC,2BAQJ,SAAC,KAAD,MAGL,C","sources":["API/getMovies.js","pages/MovieDetails/BackLink.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '77e7936073a1f82fbc0d3a17a985fb5b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// axios.defaults.headers.common = {\n//   'X-API-Key': '77e7936073a1f82fbc0d3a17a985fb5b',\n// };\nexport const getMovies = async (pathName, options) => {\n  const response = await axios.get(`${pathName}?api_key=${KEY}&${options}`);\n\n  return response;\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n`;\nexport const List = styled.div`\n  display: flex;\n  list-style: none;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, List } from './MovieCard.styled';\n\nexport const MovieCard = ({\n  movieDetails: {\n    release_date,\n    poster_path,\n    original_title,\n    popularity,\n    overview,\n    genres,\n  },\n}) => {\n  const year = new Date(release_date).getFullYear();\n  return (\n    <Container>\n      <img\n        src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n        alt={original_title}\n      />\n\n      <div>\n        <h2>{`${original_title} (${year})`}</h2>\n        {popularity && <p>{`${popularity}%`}</p>}\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n\n        <List>\n          {genres\n            ? genres.map(({ id, name }) => {\n                return <li key={id}>{name}</li>;\n              })\n            : 'Unknow'}\n        </List>\n      </div>\n    </Container>\n  );\n};\n\nMovieCard.propTypes = {\n  movieDetails: PropTypes.shape({\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    popularity: PropTypes.number,\n    overview: PropTypes.string,\n  }),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { getMovies } from 'API/getMovies';\nimport { BackLink } from './BackLink.styled';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/movies/';\n  const options = 'language=en-US';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const r = await getMovies(`movie/${movieId}`, options);\n\n        setMovieDetails(r.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <BackLink to={backLinkHref}>Return back</BackLink>\n      <MovieCard movieDetails={movieDetails} />\n\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state?.from ?? '/movies/' }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"reviews\"\n            state={{ from: location.state?.from ?? '/movies/' }}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","getMovies","pathName","options","response","StyledLink","styled","Link","BackLink","to","children","size","Container","List","MovieCard","movieDetails","release_date","poster_path","original_title","popularity","overview","genres","year","Date","getFullYear","src","alt","map","id","name","useState","setMovieDetails","movieId","useParams","location","useLocation","backLinkHref","state","from","useEffect","fetchMovie","r","data","console","log"],"sourceRoot":""}