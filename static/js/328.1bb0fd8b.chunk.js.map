{"version":3,"file":"static/js/328.1bb0fd8b.chunk.js","mappings":"6MAIAA,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAS,mCAAG,WAAOC,EAAUC,GAAjB,uFACAH,EAAAA,GAAAA,IAAA,UAAaE,EAAb,oBALb,mCAKa,YAAwCC,IADxC,cACjBC,EADiB,yBAGhBA,GAHgB,2CAAH,uD,8JCJTC,EAAOC,EAAAA,GAAAA,GAAH,wGAOJC,EAAOD,EAAAA,GAAAA,GAAH,gDAGJE,EAAQF,EAAAA,GAAAA,IAAH,qG,SCiClB,EAxCa,WACX,OAAgCG,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAIRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAECd,EAAAA,EAAAA,GAAU,SAAD,OAAUW,EAAV,YALf,kBAGK,OAETI,EAFS,OAIfL,EAAYK,EAAEC,MAJC,gDAMfC,QAAQC,IAAR,MANe,yDAAH,qDAShBJ,GACD,GAAE,CAACH,IACJ,IAAQQ,EAASV,EAATU,KACR,OACE,0BACE,SAACf,EAAD,UACGe,EACGA,EAAKC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAClC,OACE,UAAClB,EAAD,YACE,SAACC,EAAD,CACEkB,IAAG,yCAAoCF,GACvCG,IAAI,UAEN,uBAAIJ,KACJ,uBAAIE,MANKH,EASd,IACD,YAIX,C","sources":["API/getMovies.js","pages/Cast/Cast.styled.js","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '77e7936073a1f82fbc0d3a17a985fb5b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMovies = async (pathName, options) => {\n  const response = await axios.get(`${pathName}?api_key=${KEY}&${options}`);\n\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  /* display: flex; */\n`;\nexport const Image = styled.img`\n  display: block;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovies } from 'API/getMovies';\nimport { Image, Item, List } from './Cast.styled';\n\nconst Cast = () => {\n  const [castData, setCastData] = useState({});\n  const { movieId } = useParams();\n\n  const options = 'language=en-US';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const r = await getMovies(`movie/${movieId}/credits`, options);\n\n        setCastData(r.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n  const { cast } = castData;\n  return (\n    <div>\n      <List>\n        {cast\n          ? cast.map(({ id, name, profile_path, character }) => {\n              return (\n                <Item key={id}>\n                  <Image\n                    src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                    alt=\"name\"\n                  />\n                  <p>{name}</p>\n                  <p>{character}</p>\n                </Item>\n              );\n            })\n          : 'Unknow'}\n      </List>\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["axios","getMovies","pathName","options","response","List","styled","Item","Image","useState","castData","setCastData","movieId","useParams","useEffect","fetchMovie","r","data","console","log","cast","map","id","name","profile_path","character","src","alt"],"sourceRoot":""}